{"ast":null,"code":"import axios from 'axios';\nimport { bindActionCreators } from '../../../../../../../AppData/Local/Microsoft/TypeScript/3.2/node_modules/redux';\nexport var getUser = function getUser(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8096/api/user/user/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'GET_USER',\n          user: res.data\n        });\n      });\n    }\n  };\n};\nexport var getUserFriendRequests = function getUserFriendRequests(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8096/api/user/user/friendRequest/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'GET_ALL_USERS_FRIEND_REQUESTS',\n          friendRequests: res.data\n        });\n      });\n    }\n  };\n};\nexport var getUserFriends = function getUserFriends(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8096/api/user/user/friends/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'GET_ALL_USER_FRIENDS',\n          friends: res.data\n        });\n      });\n    }\n  };\n};\nexport var updateUser = function updateUser(id, user) {\n  return function (dispatch, getState) {\n    console.log(user);\n    var userFromSession = JSON.parse(localStorage.getItem('user'));\n\n    if (userFromSession) {\n      axios.put('http://localhost:8096/api/user/user/' + id, {\n        id: user.id,\n        name: user.name,\n        surname: user.surname,\n        city: user.city,\n        email: user.email,\n        telephoneNumber: user.telephoneNumber,\n        passport: user.passport\n      }, {\n        headers: {\n          Role: userFromSession.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'USER_CHANGES_HIS_ATRIBUTES',\n          user: res.data\n        });\n      });\n    }\n  };\n};\nexport var logInUser = function logInUser(email, password) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8096/api/user/user/login', {\n      email: email,\n      password: password\n    }).then(function (res) {\n      console.log(res);\n      localStorage.setItem('user', JSON.stringify(res.data));\n      window.location = '/';\n      dispatch({\n        type: 'LOG_IN_USER',\n        user: res.data\n      });\n    });\n  };\n};\nexport var loadUserAfterRefresh = function loadUserAfterRefresh(user) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: 'LOAD_USER_AFTER_REFRESH',\n      user: user\n    });\n  };\n};\nexport var logOutUser = function logOutUser() {\n  return function (dispatch, getState) {\n    localStorage.setItem('user', undefined);\n    window.location = '/';\n    dispatch({\n      type: 'LOG_OUT_USER',\n      user: undefined\n    });\n  };\n};\nexport var getUserBonusPoints = function getUserBonusPoints(userId) {\n  return function (dispatch, getState) {\n    var userFromSession = JSON.parse(localStorage.getItem('user'));\n\n    if (userFromSession) {\n      axios.get('http://localhost:8095/api/purchases/bonusPoints' + userId, {\n        headers: {\n          Role: userFromSession.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'GET_USER_BONUS_POINTS',\n          user: res.userBonusPoints\n        });\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\ISA_PROJEKAT_BACKUP\\ISA-project\\isa-front\\src\\store\\actions\\UserActions.js"],"names":["axios","bindActionCreators","getUser","id","dispatch","getState","user","JSON","parse","localStorage","getItem","get","headers","Role","role","then","res","console","log","type","data","getUserFriendRequests","friendRequests","getUserFriends","friends","updateUser","userFromSession","put","name","surname","city","email","telephoneNumber","passport","logInUser","password","post","setItem","stringify","window","location","loadUserAfterRefresh","logOutUser","undefined","getUserBonusPoints","userId","userBonusPoints"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { bindActionCreators } from '../../../../../../../AppData/Local/Microsoft/TypeScript/3.2/node_modules/redux';\r\n\r\nexport const getUser = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8096/api/user/user/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'GET_USER', user: res.data });\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getUserFriendRequests = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8096/api/user/user/friendRequest/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'GET_ALL_USERS_FRIEND_REQUESTS', friendRequests: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getUserFriends = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8096/api/user/user/friends/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'GET_ALL_USER_FRIENDS', friends: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUser = (id, user) => {\r\n\r\n    return (dispatch, getState) => {\r\n        console.log(user);\r\n        var userFromSession = JSON.parse(localStorage.getItem('user'))\r\n        if (userFromSession) {\r\n            axios.put('http://localhost:8096/api/user/user/' + id, { id: user.id, name: user.name, surname: user.surname, city: user.city, email: user.email, telephoneNumber: user.telephoneNumber, passport: user.passport }, {\r\n                headers: {\r\n                    Role: userFromSession.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'USER_CHANGES_HIS_ATRIBUTES', user: res.data });\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const logInUser = (email, password) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.post('http://localhost:8096/api/user/user/login', { email: email, password: password })\r\n            .then(res => {\r\n                console.log(res);\r\n                localStorage.setItem('user', JSON.stringify(res.data))\r\n                window.location = '/'\r\n                dispatch({ type: 'LOG_IN_USER', user: res.data });\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const loadUserAfterRefresh = (user) => {\r\n\r\n    return (dispatch, getState) => {\r\n        dispatch({ type: 'LOAD_USER_AFTER_REFRESH', user: user });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const logOutUser = () => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n\r\n        localStorage.setItem('user', undefined)\r\n        window.location = '/'\r\n        dispatch({ type: 'LOG_OUT_USER', user: undefined });\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getUserBonusPoints = (userId) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var userFromSession = JSON.parse(localStorage.getItem('user'))\r\n        if (userFromSession) {\r\n            axios.get('http://localhost:8095/api/purchases/bonusPoints' + userId, {\r\n                headers: {\r\n                    Role: userFromSession.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'GET_USER_BONUS_POINTS', user: res.userBonusPoints });\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}