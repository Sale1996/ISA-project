{"ast":null,"code":"import axios from 'axios';\nexport var getAllBonusPointsDiscounts = function getAllBonusPointsDiscounts() {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8095/api/purchases/bonusPoitsDiscounts/all').then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_BONUS_POINTS_DISCOUNTS',\n        bonusPointsDiscounts: res.data\n      });\n    });\n  };\n};\nexport var getUserShoppingCart = function getUserShoppingCart(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8095/api/purchases/shoppingCart/user/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        //nakon sto smo dobili korpu, moramo da ucitamo i rezervacije koje ona ima..\n        console.log(res.data);\n        dispatch(getCarReservation(res.data.carReservationId));\n        dispatch({\n          type: 'GET_USER_SHOPPING_CART',\n          userShoppingCart: res.data\n        });\n      });\n    }\n  };\n};\nexport var getCarReservation = function getCarReservation(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8090/api/rentacar/reservation/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        dispatch({\n          type: 'GET_CAR_RESERVATION',\n          carReservation: res.data\n        });\n      });\n    }\n  };\n};\nexport var createUserShoppingCart = function createUserShoppingCart(userId) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8095/api/purchases/shoppingCart/', {\n        id: -1,\n        bonusPoints: 0,\n        userId: userId,\n        carReservationId: null,\n        roomReservationId: null,\n        uslugaReservationId: null,\n        cenovnikReservationId: null,\n        price: 0\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        dispatch({\n          type: 'CREATE_USER_SHOPPING_CART',\n          userShoppingCart: res.data\n        });\n      });\n    }\n  };\n};\nexport var addRentACarReservationToShoppingCart = function addRentACarReservationToShoppingCart(idKorpe, dateFrom, dateTo, car) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.put('http://localhost:8095/api/purchases/shoppingCart/addCarReservation/' + idKorpe, {\n        id: -1,\n        dateFrom: dateFrom,\n        dateTo: dateTo,\n        rating: 0,\n        carRating: 0,\n        reservedCar: {\n          id: car.id,\n          rentPrice: car.rentPrice,\n          carType: {\n            id: car.carType.id,\n            numberOfSeats: '',\n            modelYear: '',\n            model: '',\n            brand: '',\n            carType: ''\n          },\n          rentService: {\n            id: car.rentService.id,\n            name: '',\n            adress: '',\n            description: ''\n          },\n          branchOffice: {\n            id: car.branchOffice.id,\n            name: '',\n            adress: '',\n            city: '',\n            rentServiceDTO: {\n              id: car.rentService.id,\n              adress: '',\n              name: '',\n              description: ''\n            }\n          }\n        },\n        branchOfficeFrom: {\n          id: car.branchOffice.id,\n          name: '',\n          adress: '',\n          city: '',\n          rentServiceDTO: {\n            id: car.rentService.id,\n            adress: '',\n            name: '',\n            description: ''\n          }\n        },\n        branchOfficeTo: {\n          id: car.branchOffice.id,\n          name: '',\n          adress: '',\n          city: '',\n          rentServiceDTO: {\n            id: car.rentService.id,\n            adress: '',\n            name: '',\n            description: ''\n          }\n        },\n        service: {\n          id: car.rentService.id,\n          adress: '',\n          name: '',\n          description: ''\n        }\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        dispatch({\n          type: 'ADD_CAR_RESERVATION_TO_SHOPPING_CART',\n          userShoppingCart: res.data\n        });\n      });\n    }\n  };\n};\nexport var removeRentACarReservationFromShoppingCart = function removeRentACarReservationFromShoppingCart(idKorpe) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.delete('http://localhost:8095/api/purchases/shoppingCart/deleteCarReservation/' + idKorpe, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        dispatch({\n          type: 'REMOVE_CAR_RESERVATION_FROM_SHOPPING_CART',\n          userShoppingCart: res.data\n        });\n      });\n    }\n  };\n};\nexport var makeReservation = function makeReservation(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8095/api/purchases/shoppingCart/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        dispatch({\n          type: 'MAKE_RESERVATION',\n          finalReservation: res.data\n        });\n      });\n    }\n  };\n};\nexport var getAllUserReservations = function getAllUserReservations(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8095/api/purchases/reservation/allByUser/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        res.data.map(function (reservation) {\n          return dispatch(addRentCarReservationToCollection(reservation.carReservationId));\n        });\n        dispatch({\n          type: 'GET_USER_RESERVATIONS',\n          userReservations: res.data\n        });\n      });\n    }\n  };\n};\nexport var addRentCarReservationToCollection = function addRentCarReservationToCollection(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8090/api/rentacar/reservation/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        dispatch({\n          type: 'GET_USER_RENT_A_CAR_RESERVATIONS',\n          rentCarReservations: res.data\n        });\n      });\n    }\n  };\n};\nexport var createBonusPointsDiscount = function createBonusPointsDiscount(bonusPointsDiscount) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8095/api/purchases/bonusPoitsDiscounts/', {\n        id: bonusPointsDiscount.id,\n        points: bonusPointsDiscount.points,\n        discount: bonusPointsDiscount.discount\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'CREATE_BONUS_POINTS_DISCOUNT',\n          bonusPointsDiscount: res.data\n        });\n      });\n    }\n  };\n};\nexport var editBonusPointsDiscount = function editBonusPointsDiscount(id, bonusPointsDiscount) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.put('http://localhost:8095/api/purchases/bonusPoitsDiscounts/' + id, {\n        id: bonusPointsDiscount.id,\n        points: bonusPointsDiscount.points,\n        discount: bonusPointsDiscount.discount\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'UPDATE_BONUS_POINTS_DISCOUNT',\n          editedDiscount: res.data\n        });\n      });\n    }\n  };\n};\nexport var deleteBonusPointsDiscount = function deleteBonusPointsDiscount(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.delete('http://localhost:8095/api/purchases/bonusPoitsDiscounts/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'DELETE_BONUS_POINTS_DISCOUNT',\n          deletedDiscount: res.data\n        });\n      });\n    }\n  };\n};\nexport var rateRentACarService = function rateRentACarService(date, userId, idService, rating) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8095/api/purchases/rentACarRating/' + date, {\n        id: -1,\n        userId: userId,\n        rentACarId: idService,\n        rating: rating\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'RATE_RENT_A_CAR',\n          rating: res.data\n        });\n      });\n    }\n  };\n};\nexport var rateCar = function rateCar(date, userId, idCar, rating) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8095/api/purchases/carRating/' + date, {\n        id: -1,\n        userId: userId,\n        carId: idCar,\n        rating: rating\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'RATE_CAR',\n          rating: res.data\n        });\n      });\n    }\n  };\n};\nexport var getAllRentACarRatings = function getAllRentACarRatings(userId) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8095/api/purchases/rentACarRating/all').then(function (res) {\n      var userRatings = res.data.filter(function (item) {\n        return item.userId == userId;\n      });\n      dispatch({\n        type: 'GET_ALL_RENT_A_CAR_RATINGS',\n        userRatings: userRatings\n      });\n    });\n  };\n};\nexport var getAllCarRatings = function getAllCarRatings(userId) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8095/api/purchases/carRating/all').then(function (res) {\n      console.log(res);\n      var userCarRatings = res.data.filter(function (item) {\n        return item.userId == userId;\n      });\n      dispatch({\n        type: 'GET_ALL_CAR_RATINGS',\n        userRatings: userCarRatings\n      });\n    });\n  };\n};\nexport var cancelCarReservation = function cancelCarReservation(reservationId) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8095/api/purchases/deleteCarReservation/' + reservationId).then(function (res) {\n        console.log(res);\n      });\n    }\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\ISA_PROJEKAT_BACKUP\\ISA-project\\isa-front\\src\\store\\actions\\PurchasesActions.js"],"names":["axios","getAllBonusPointsDiscounts","dispatch","getState","get","then","res","console","log","data","type","bonusPointsDiscounts","getUserShoppingCart","id","user","JSON","parse","localStorage","getItem","headers","Role","role","getCarReservation","carReservationId","userShoppingCart","carReservation","createUserShoppingCart","userId","post","bonusPoints","roomReservationId","uslugaReservationId","cenovnikReservationId","price","addRentACarReservationToShoppingCart","idKorpe","dateFrom","dateTo","car","put","rating","carRating","reservedCar","rentPrice","carType","numberOfSeats","modelYear","model","brand","rentService","name","adress","description","branchOffice","city","rentServiceDTO","branchOfficeFrom","branchOfficeTo","service","removeRentACarReservationFromShoppingCart","delete","makeReservation","finalReservation","getAllUserReservations","map","reservation","addRentCarReservationToCollection","userReservations","rentCarReservations","createBonusPointsDiscount","bonusPointsDiscount","points","discount","editBonusPointsDiscount","editedDiscount","deleteBonusPointsDiscount","deletedDiscount","rateRentACarService","date","idService","rentACarId","rateCar","idCar","carId","getAllRentACarRatings","userRatings","filter","item","getAllCarRatings","userCarRatings","cancelCarReservation","reservationId"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nexport const getAllBonusPointsDiscounts = () => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get('http://localhost:8095/api/purchases/bonusPoitsDiscounts/all')\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_BONUS_POINTS_DISCOUNTS', bonusPointsDiscounts: res.data })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const getUserShoppingCart = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8095/api/purchases/shoppingCart/user/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    //nakon sto smo dobili korpu, moramo da ucitamo i rezervacije koje ona ima..\r\n                    console.log(res.data)\r\n                    dispatch(getCarReservation(res.data.carReservationId));\r\n                    dispatch({ type: 'GET_USER_SHOPPING_CART', userShoppingCart: res.data })\r\n                })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const getCarReservation = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8090/api/rentacar/reservation/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    dispatch({ type: 'GET_CAR_RESERVATION', carReservation: res.data })\r\n                })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const createUserShoppingCart = (userId) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8095/api/purchases/shoppingCart/', { id: -1, bonusPoints: 0, userId: userId, carReservationId: null, roomReservationId: null, uslugaReservationId: null, cenovnikReservationId: null, price: 0 }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    dispatch({ type: 'CREATE_USER_SHOPPING_CART', userShoppingCart: res.data })\r\n                })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const addRentACarReservationToShoppingCart = (idKorpe, dateFrom, dateTo, car) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.put('http://localhost:8095/api/purchases/shoppingCart/addCarReservation/' + idKorpe, { id: -1, dateFrom: dateFrom, dateTo: dateTo, rating: 0, carRating: 0, reservedCar: { id: car.id, rentPrice: car.rentPrice, carType: { id: car.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: car.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } } }, branchOfficeFrom: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } }, branchOfficeTo: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } }, service: { id: car.rentService.id, adress: '', name: '', description: '' } }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    dispatch({ type: 'ADD_CAR_RESERVATION_TO_SHOPPING_CART', userShoppingCart: res.data })\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeRentACarReservationFromShoppingCart = (idKorpe) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.delete('http://localhost:8095/api/purchases/shoppingCart/deleteCarReservation/' + idKorpe, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    dispatch({ type: 'REMOVE_CAR_RESERVATION_FROM_SHOPPING_CART', userShoppingCart: res.data })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const makeReservation = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8095/api/purchases/shoppingCart/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    dispatch({ type: 'MAKE_RESERVATION', finalReservation: res.data })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getAllUserReservations = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8095/api/purchases/reservation/allByUser/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    res.data.map(reservation => {\r\n                        return (dispatch(addRentCarReservationToCollection(reservation.carReservationId)));\r\n                    })\r\n\r\n                    dispatch({ type: 'GET_USER_RESERVATIONS', userReservations: res.data })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const addRentCarReservationToCollection = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8090/api/rentacar/reservation/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    dispatch({ type: 'GET_USER_RENT_A_CAR_RESERVATIONS', rentCarReservations: res.data })\r\n                })\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const createBonusPointsDiscount = (bonusPointsDiscount) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8095/api/purchases/bonusPoitsDiscounts/', { id: bonusPointsDiscount.id, points: bonusPointsDiscount.points, discount: bonusPointsDiscount.discount }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'CREATE_BONUS_POINTS_DISCOUNT', bonusPointsDiscount: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const editBonusPointsDiscount = (id, bonusPointsDiscount) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.put('http://localhost:8095/api/purchases/bonusPoitsDiscounts/' + id, { id: bonusPointsDiscount.id, points: bonusPointsDiscount.points, discount: bonusPointsDiscount.discount }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'UPDATE_BONUS_POINTS_DISCOUNT', editedDiscount: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deleteBonusPointsDiscount = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.delete('http://localhost:8095/api/purchases/bonusPoitsDiscounts/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'DELETE_BONUS_POINTS_DISCOUNT', deletedDiscount: res.data });\r\n                })\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const rateRentACarService = (date, userId, idService, rating) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8095/api/purchases/rentACarRating/' + date, { id: -1, userId: userId, rentACarId: idService, rating: rating }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'RATE_RENT_A_CAR', rating: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const rateCar = (date, userId, idCar, rating) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8095/api/purchases/carRating/' + date, { id: -1, userId: userId, carId: idCar, rating: rating }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'RATE_CAR', rating: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getAllRentACarRatings = (userId) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8095/api/purchases/rentACarRating/all')\r\n            .then(res => {\r\n                const userRatings = res.data.filter(item => item.userId == userId)\r\n                dispatch({ type: 'GET_ALL_RENT_A_CAR_RATINGS', userRatings: userRatings });\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const getAllCarRatings = (userId) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8095/api/purchases/carRating/all')\r\n            .then(res => {\r\n                console.log(res);\r\n                const userCarRatings = res.data.filter(item => item.userId == userId)\r\n                dispatch({ type: 'GET_ALL_CAR_RATINGS', userRatings: userCarRatings });\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const cancelCarReservation = (reservationId) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8095/api/purchases/deleteCarReservation/' + reservationId)\r\n                .then(res => {\r\n                    console.log(res);\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}