{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT_BACKUP\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT_BACKUP\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT_BACKUP\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT_BACKUP\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT_BACKUP\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\ISA_PROJEKAT_BACKUP\\\\ISA-project\\\\isa-front\\\\src\\\\components\\\\dashboard\\\\classicUser\\\\Vozila.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { createUserShoppingCart as _createUserShoppingCart, addRentACarReservationToShoppingCart as _addRentACarReservationToShoppingCart } from \"../../../store/actions/PurchasesActions\";\n\nvar Cenovnici =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cenovnici, _Component);\n\n  function Cenovnici() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cenovnici);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cenovnici)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      vozila: [],\n      tipoviVozila: [],\n      izabraniTipVozila: -1,\n      sakriPretragu: true,\n      ponistiPretragu: false,\n      carType: '',\n      datumPocetka: undefined,\n      datumKraja: undefined,\n      vremePocetka: undefined,\n      vremeKraja: undefined,\n      dateFrom: '',\n      dateTo: '',\n      aktivirajDugmeRezervacije: false,\n      averageCarRating: []\n    };\n\n    _this.rezervisiVozilo = function (e) {\n      var id_vozila = e.target.id; //ispitam da li korpa postoji...\n\n      if (!_this.props.userShoppingCart) {\n        //ukoliko ne postoji pozivam dispatch da je kreira i prosledjujem user_id....\n        _this.props.createUserShoppingCart(_this.props.userId);\n      }\n\n      var vozilo = _this.state.vozila.find(function (vozilo) {\n        return vozilo.id == id_vozila;\n      });\n\n      _this.props.addRentACarReservationToShoppingCart(_this.props.userId, _this.state.dateFrom, _this.state.dateTo, vozilo);\n    };\n\n    _this.getAllCarTypes = function () {\n      axios.get('http://localhost:8090/api/rentacar/carType/all').then(function (res) {\n        console.log(res.data);\n\n        _this.setState({\n          tipoviVozila: res.data\n        });\n      });\n    };\n\n    _this.getAllCars = function () {\n      var id = _this.props.match.params.serviceId; //id servisa\n\n      axios.get('http://localhost:8090/api/rentacar/car/getByRentService/' + id) //tvoj url za pronalazak vozila po id servisa\n      .then(function (res) {\n        console.log(res);\n\n        _this.setState({\n          vozila: res.data\n        });\n      });\n    };\n\n    _this.toggleForm = function () {\n      _this.setState({\n        sakriPretragu: false\n      });\n    };\n\n    _this.hideForm = function () {\n      _this.setState({\n        sakriPretragu: true\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      if (_this.state.dateFrom != '' && _this.state.dateTo != '') {\n        axios.get('http://localhost:8090/api/rentacar/car/getFreeCars/' + _this.state.dateFrom + '/' + _this.state.dateTo) //tvoj url za pronalazak vozila po id servisa\n        .then(function (res) {\n          console.log(res);\n\n          if (_this.state.izabraniTipVozila == -1) {\n            _this.setState({\n              vozila: res.data.filter(function (item) {\n                return item.rentService.id == _this.props.match.params.serviceId;\n              }),\n              aktivirajDugmeRezervacije: true\n            });\n          } else {\n            _this.setState({\n              vozila: res.data.filter(function (item) {\n                return item.carType.id == _this.state.izabraniTipVozila && item.rentService.id == _this.props.match.params.serviceId;\n              }),\n              aktivirajDugmeRezervacije: true\n            });\n          }\n        });\n      }\n\n      if (_this.state.dateFrom == '' && _this.state.dateTo == '' && _this.state.izabraniTipVozila != -1) {\n        _this.setState({\n          vozila: _this.state.vozila.filter(function (item) {\n            return item.carType.id == _this.state.izabraniTipVozila;\n          })\n        });\n      } else if (_this.state.izabraniTipVozila == -1) {\n        _this.getAllCars();\n      }\n    };\n\n    _this.carTypeChange = function (e) {\n      _this.setState({\n        izabraniTipVozila: e.target.value\n      });\n    };\n\n    _this.handleDateTimeChange = function (e) {\n      if (e.target.id == \"datumPocetka\" || e.target.id == \"vremePocetka\") {\n        var datumPocetka = undefined;\n        var vremePocetka = undefined;\n\n        if (e.target.id == \"datumPocetka\") {\n          datumPocetka = e.target.value;\n          if (_this.state.vremePocetka) vremePocetka = _this.state.vremePocetka;\n        } else {\n          vremePocetka = e.target.value;\n          if (_this.state.datumPocetka) datumPocetka = _this.state.datumPocetka;\n        }\n\n        var formatDatumIVremeZaApi = datumPocetka + 'T' + vremePocetka + ':00';\n\n        _this.setState({\n          datumPocetka: datumPocetka,\n          vremePocetka: vremePocetka,\n          dateFrom: formatDatumIVremeZaApi\n        });\n      } else if (e.target.id == \"datumKraja\" || e.target.id == \"vremeKraja\") {\n        var datumKraja = undefined;\n        var vremeKraja = undefined;\n\n        if (e.target.id == \"datumKraja\") {\n          datumKraja = e.target.value;\n          if (_this.state.vremeKraja) vremeKraja = _this.state.vremeKraja;\n        } else {\n          vremeKraja = e.target.value;\n          if (_this.state.datumKraja) datumKraja = _this.state.datumKraja;\n        }\n\n        var formatDatumIVremeZaApi = datumKraja + 'T' + vremeKraja + \":00\";\n\n        _this.setState({\n          datumKraja: datumKraja,\n          vremeKraja: vremeKraja,\n          dateTo: formatDatumIVremeZaApi\n        });\n      }\n    };\n\n    _this.getAverageRatingCar = function (id) {\n      axios.get('http://localhost:8095/api/purchases/carRating/getAverageRating/' + id).then(function (res) {\n        _this.setState({\n          averageCarRating: _this.state.averageCarRating.filter(function (item) {\n            return item.carId != id;\n          }).concat({\n            carId: id,\n            rating: res.data\n          })\n        });\n      }).catch(function (error) {\n        _this.setState({\n          averageCarRating: _this.state.averageCarRating.concat({\n            carId: id,\n            rating: 'nema jos ratinga'\n          })\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Cenovnici, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllCars();\n      this.getAllCarTypes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var vozila = this.state.vozila;\n      var imeServisa = \"\";\n      var vozilaList = vozila.length ? vozila.map(function (vozilo) {\n        imeServisa = vozilo.rentService.name; //postavljanje prosecnog ratinga\n\n        var rating = _this2.state.averageCarRating.find(function (item) {\n          item.carId == vozilo.id;\n        });\n\n        if (rating == undefined) _this2.getAverageRatingCar(vozilo.id);\n        return React.createElement(\"div\", {\n          className: \"post card grey lighten-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-content container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"card-title center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, vozilo.carType.model, \" \", vozilo.carType.brand)), React.createElement(\"div\", {\n          className: \"left-align\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"orange-text darken-3 center \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, \"Prosecna ocena: \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, _this2.state.averageCarRating), \" \")), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, \"Cena: \", vozilo.rentPrice), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, \"Filijala: \", vozilo.branchOffice.name, \" \", vozilo.branchOffice.city, \" \", vozilo.branchOffice.adress)), _this2.state.aktivirajDugmeRezervacije ? React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          onClick: _this2.rezervisiVozilo,\n          id: vozilo.id,\n          className: \"btn orange darken-3 z-depth-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, \"Rezervisi\")) : ''));\n      }) : React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Nisu pronadjena vozila.\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"red-text lighten-1 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Vozila servisa \", imeServisa), this.props.ulogovanUser && this.state.sakriPretragu ? React.createElement(NavLink, {\n        to: \"#\",\n        onClick: this.toggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Prikazi formu za rezervaciju\") : '', this.props.ulogovanUser && this.state.sakriPretragu == false ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"#\",\n        onClick: this.hideForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Sakrij formu\"), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"white\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"datumPocetka\",\n        className: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Datum pocetka rezervacije\"), React.createElement(\"input\", {\n        type: \"date\",\n        id: \"datumPocetka\",\n        onChange: this.handleDateTimeChange,\n        value: this.state.datumPocetka,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vremePocetka\",\n        className: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Vreme pocetka rezervacije\"), React.createElement(\"input\", {\n        type: \"time\",\n        id: \"vremePocetka\",\n        onChange: this.handleDateTimeChange,\n        value: this.state.vremePocetka,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"datumKraja\",\n        className: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Datum kraja rezervacije\"), React.createElement(\"input\", {\n        type: \"date\",\n        id: \"datumKraja\",\n        onChange: this.handleDateTimeChange,\n        value: this.state.datumKraja,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"vremeKraja\",\n        className: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"Vreme kraja rezervacije\"), React.createElement(\"input\", {\n        type: \"time\",\n        id: \"vremeKraja\",\n        onChange: this.handleDateTimeChange,\n        value: this.state.vremeKraja,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"tipVozilaSelect\",\n        className: \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Tip vozila\"), React.createElement(\"select\", {\n        id: \"tipVozilaSelect\",\n        onChange: this.carTypeChange,\n        className: \"browser-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Bilo koji tip\"), this.state.tipoviVozila.map(function (carType) {\n        return React.createElement(\"option\", {\n          value: carType.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, carType.brand, \" \", carType.model, \" \", carType.modelYear, \", \", carType.carType, \", broj sedista: \", carType.numberOfSeats);\n      }))), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn purple darken-3 z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Pretraga\"))))))) : '', this.state.ponistiPretragu ? React.createElement(NavLink, {\n        to: \"#\",\n        onClick: this.getAllCars,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Ponistite pretragu\") : '', vozilaList));\n    }\n  }]);\n\n  return Cenovnici;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userShoppingCart: state.purchases.userShoppingCart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createUserShoppingCart: function createUserShoppingCart(id) {\n      return dispatch(_createUserShoppingCart(id));\n    },\n    addRentACarReservationToShoppingCart: function addRentACarReservationToShoppingCart(idKorpe, dateFrom, dateTo, car) {\n      return dispatch(_addRentACarReservationToShoppingCart(idKorpe, dateFrom, dateTo, car));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cenovnici);","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\ISA_PROJEKAT_BACKUP\\ISA-project\\isa-front\\src\\components\\dashboard\\classicUser\\Vozila.js"],"names":["React","Component","axios","NavLink","connect","createUserShoppingCart","addRentACarReservationToShoppingCart","Cenovnici","state","vozila","tipoviVozila","izabraniTipVozila","sakriPretragu","ponistiPretragu","carType","datumPocetka","undefined","datumKraja","vremePocetka","vremeKraja","dateFrom","dateTo","aktivirajDugmeRezervacije","averageCarRating","rezervisiVozilo","e","id_vozila","target","id","props","userShoppingCart","userId","vozilo","find","getAllCarTypes","get","then","res","console","log","data","setState","getAllCars","match","params","serviceId","toggleForm","hideForm","handleSubmit","preventDefault","filter","item","rentService","carTypeChange","value","handleDateTimeChange","formatDatumIVremeZaApi","getAverageRatingCar","carId","concat","rating","catch","error","imeServisa","vozilaList","length","map","name","model","brand","rentPrice","branchOffice","city","adress","ulogovanUser","modelYear","numberOfSeats","mapStateToProps","purchases","mapDispatchToProps","dispatch","idKorpe","car"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from \"react-redux\"\r\nimport { createUserShoppingCart, addRentACarReservationToShoppingCart } from \"../../../store/actions/PurchasesActions\"\r\n\r\n\r\nclass Cenovnici extends Component {\r\n\r\n    state = {\r\n        vozila: [],\r\n        tipoviVozila: [],\r\n        izabraniTipVozila: -1,\r\n        sakriPretragu: true,\r\n        ponistiPretragu: false,\r\n        carType: '',\r\n        datumPocetka: undefined,\r\n        datumKraja: undefined,\r\n        vremePocetka: undefined,\r\n        vremeKraja: undefined,\r\n        dateFrom: '',\r\n        dateTo: '',\r\n        aktivirajDugmeRezervacije: false,\r\n        averageCarRating: []\r\n    }\r\n\r\n    rezervisiVozilo = (e) => {\r\n        var id_vozila = e.target.id;\r\n\r\n        //ispitam da li korpa postoji...\r\n\r\n\r\n        if (!this.props.userShoppingCart) {\r\n\r\n            //ukoliko ne postoji pozivam dispatch da je kreira i prosledjujem user_id....\r\n            this.props.createUserShoppingCart(this.props.userId)\r\n\r\n        }\r\n\r\n        var vozilo = this.state.vozila.find(vozilo => vozilo.id == id_vozila)\r\n\r\n        this.props.addRentACarReservationToShoppingCart(this.props.userId, this.state.dateFrom, this.state.dateTo, vozilo)\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllCars();\r\n        this.getAllCarTypes();\r\n    }\r\n\r\n    getAllCarTypes = () => {\r\n        axios.get('http://localhost:8090/api/rentacar/carType/all')\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    tipoviVozila: res.data\r\n                })\r\n            })\r\n    }\r\n\r\n    getAllCars = () => {\r\n        const id = this.props.match.params.serviceId;//id servisa\r\n        axios.get('http://localhost:8090/api/rentacar/car/getByRentService/' + id)//tvoj url za pronalazak vozila po id servisa\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    vozila: res.data\r\n                })\r\n            })\r\n    }\r\n\r\n    toggleForm = () => {\r\n        this.setState({\r\n            sakriPretragu: false\r\n        })\r\n    }\r\n\r\n    hideForm = () => {\r\n        this.setState({\r\n            sakriPretragu: true\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.dateFrom != '' && this.state.dateTo != '') {\r\n            axios.get('http://localhost:8090/api/rentacar/car/getFreeCars/' + this.state.dateFrom + '/' + this.state.dateTo)//tvoj url za pronalazak vozila po id servisa\r\n                .then(res => {\r\n                    console.log(res);\r\n                    if (this.state.izabraniTipVozila == -1) {\r\n                        this.setState({\r\n                            vozila: res.data.filter(item => item.rentService.id == this.props.match.params.serviceId),\r\n                            aktivirajDugmeRezervacije: true\r\n                        })\r\n                    }\r\n                    else {\r\n                        this.setState({\r\n                            vozila: res.data.filter(item => item.carType.id == this.state.izabraniTipVozila && item.rentService.id == this.props.match.params.serviceId),\r\n                            aktivirajDugmeRezervacije: true\r\n                        })\r\n                    }\r\n\r\n                })\r\n        }\r\n\r\n        if (this.state.dateFrom == '' && this.state.dateTo == '' && this.state.izabraniTipVozila != -1) {\r\n\r\n            this.setState({\r\n                vozila: this.state.vozila.filter(item => item.carType.id == this.state.izabraniTipVozila)\r\n            })\r\n        }\r\n        else if (this.state.izabraniTipVozila == -1) {\r\n            this.getAllCars();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    carTypeChange = (e) => {\r\n        this.setState({\r\n            izabraniTipVozila: e.target.value\r\n        })\r\n    }\r\n\r\n    handleDateTimeChange = (e) => {\r\n\r\n        if (e.target.id == \"datumPocetka\" || e.target.id == \"vremePocetka\") {\r\n\r\n            var datumPocetka = undefined;\r\n            var vremePocetka = undefined;\r\n            if (e.target.id == \"datumPocetka\") {\r\n                datumPocetka = e.target.value;\r\n                if (this.state.vremePocetka)\r\n                    vremePocetka = this.state.vremePocetka;\r\n            }\r\n            else {\r\n                vremePocetka = e.target.value;\r\n                if (this.state.datumPocetka)\r\n                    datumPocetka = this.state.datumPocetka;\r\n\r\n            }\r\n\r\n            var formatDatumIVremeZaApi = datumPocetka + 'T' + vremePocetka + ':00';\r\n\r\n            this.setState({\r\n\r\n                datumPocetka: datumPocetka,\r\n                vremePocetka: vremePocetka,\r\n                dateFrom: formatDatumIVremeZaApi\r\n\r\n            })\r\n\r\n        }\r\n        else if (e.target.id == \"datumKraja\" || e.target.id == \"vremeKraja\") {\r\n\r\n            var datumKraja = undefined;\r\n            var vremeKraja = undefined;\r\n            if (e.target.id == \"datumKraja\") {\r\n                datumKraja = e.target.value;\r\n                if (this.state.vremeKraja)\r\n                    vremeKraja = this.state.vremeKraja;\r\n            }\r\n            else {\r\n                vremeKraja = e.target.value;\r\n                if (this.state.datumKraja)\r\n                    datumKraja = this.state.datumKraja;\r\n\r\n            }\r\n\r\n            var formatDatumIVremeZaApi = datumKraja + 'T' + vremeKraja + \":00\";\r\n\r\n            this.setState({\r\n\r\n                datumKraja: datumKraja,\r\n                vremeKraja: vremeKraja,\r\n                dateTo: formatDatumIVremeZaApi\r\n\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getAverageRatingCar = (id) => {\r\n\r\n        axios.get('http://localhost:8095/api/purchases/carRating/getAverageRating/' + id)\r\n            .then(res => {\r\n\r\n                this.setState({\r\n                    averageCarRating: this.state.averageCarRating.filter(item => item.carId != id).concat({ carId: id, rating: res.data })\r\n                })\r\n\r\n            })\r\n            .catch(error => {\r\n                this.setState({\r\n                    averageCarRating: this.state.averageCarRating.concat({ carId: id, rating: 'nema jos ratinga' })\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { vozila } = this.state;\r\n        var imeServisa = \"\";\r\n        const vozilaList = vozila.length ? (vozila.map(vozilo => {\r\n            imeServisa = vozilo.rentService.name;\r\n            //postavljanje prosecnog ratinga\r\n            var rating = this.state.averageCarRating.find(item => { item.carId == vozilo.id })\r\n            if (rating == undefined)\r\n                this.getAverageRatingCar(vozilo.id);\r\n\r\n            return (\r\n                <div className=\"post card grey lighten-2\">\r\n                    <div className=\"card-content container\">\r\n                        <span className=\"card-title center\"><strong>{vozilo.carType.model} {vozilo.carType.brand}</strong></span>\r\n                        <div className=\"left-align\">\r\n                            <div>\r\n                                <p className=\"orange-text darken-3 center \">Prosecna ocena: <strong>{this.state.averageCarRating}</strong> </p>\r\n                            </div>\r\n                            <p>Cena: {vozilo.rentPrice}</p>\r\n                            <p>Filijala: {vozilo.branchOffice.name} {vozilo.branchOffice.city} {vozilo.branchOffice.adress}</p>\r\n                        </div>\r\n                        {\r\n                            this.state.aktivirajDugmeRezervacije ?\r\n                                <div>\r\n                                    <br />\r\n                                    <button onClick={this.rezervisiVozilo} id={vozilo.id} className=\"btn orange darken-3 z-depth-0\">Rezervisi</button>\r\n\r\n                                </div>\r\n                                :\r\n                                ''\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        })) : (<div className=\"center\">Nisu pronadjena vozila.</div>)\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div className=\"container center\">\r\n                    <h2 className=\"red-text lighten-1 center\">Vozila servisa {imeServisa}</h2>\r\n                    {this.props.ulogovanUser && this.state.sakriPretragu ?\r\n                        <NavLink to=\"#\" onClick={this.toggleForm}>Prikazi formu za rezervaciju</NavLink>\r\n                        :\r\n                        ''\r\n                    }\r\n                    {this.props.ulogovanUser && this.state.sakriPretragu == false ?\r\n                        <div>\r\n                            <NavLink to=\"#\" onClick={this.hideForm}>Sakrij formu</NavLink>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-content\">\r\n\r\n                                    <div className=\"container\">\r\n                                        <form className=\"white\" onSubmit={this.handleSubmit} >\r\n\r\n                                            <div>\r\n                                                <label htmlFor=\"datumPocetka\" className=\"active\">Datum pocetka rezervacije</label>\r\n                                                <input type=\"date\" id='datumPocetka' onChange={this.handleDateTimeChange} value={this.state.datumPocetka} />\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <label htmlFor=\"vremePocetka\" className=\"active\">Vreme pocetka rezervacije</label>\r\n                                                <input type=\"time\" id='vremePocetka' onChange={this.handleDateTimeChange} value={this.state.vremePocetka} />\r\n                                            </div>\r\n\r\n\r\n                                            <div>\r\n                                                <label htmlFor=\"datumKraja\" className=\"active\">Datum kraja rezervacije</label>\r\n                                                <input type=\"date\" id='datumKraja' onChange={this.handleDateTimeChange} value={this.state.datumKraja} />\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <label htmlFor=\"vremeKraja\" className=\"active\">Vreme kraja rezervacije</label>\r\n                                                <input type=\"time\" id='vremeKraja' onChange={this.handleDateTimeChange} value={this.state.vremeKraja} />\r\n                                            </div>\r\n\r\n                                            <div>\r\n                                                <label htmlFor=\"tipVozilaSelect\" className=\"active\">Tip vozila</label>\r\n\r\n                                                <select id=\"tipVozilaSelect\" onChange={this.carTypeChange} className=\"browser-default\">\r\n                                                    <option value={-1}>Bilo koji tip</option>\r\n                                                    {this.state.tipoviVozila.map(carType => {\r\n                                                        return (\r\n                                                            <option value={carType.id}>{carType.brand} {carType.model} {carType.modelYear}, {carType.carType}, broj sedista: {carType.numberOfSeats}</option>\r\n                                                        );\r\n                                                    })}\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            <div className=\"input-field\">\r\n                                                <button className=\"btn purple darken-3 z-depth-0\">Pretraga</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        ''\r\n                    }\r\n                    {\r\n                        this.state.ponistiPretragu ?\r\n\r\n                            <NavLink to=\"#\" onClick={this.getAllCars}>Ponistite pretragu</NavLink>\r\n\r\n\r\n                            :\r\n                            ''\r\n                    }\r\n\r\n\r\n                    {vozilaList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userShoppingCart: state.purchases.userShoppingCart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createUserShoppingCart: (id) => dispatch(createUserShoppingCart(id)),\r\n        addRentACarReservationToShoppingCart: (idKorpe, dateFrom, dateTo, car) => dispatch(addRentACarReservationToShoppingCart(idKorpe, dateFrom, dateTo, car))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cenovnici)\r\n"]},"metadata":{},"sourceType":"module"}