{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\ISA_Project\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\ISA_Project\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\ISA_Project\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\ISA_Project\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\ISA_Project\\\\ISA-project\\\\isa-front\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Korisnik\\\\Desktop\\\\ISA_Project\\\\ISA-project\\\\isa-front\\\\src\\\\components\\\\dashboard\\\\HoteliIzlistavanje.js\";\nimport React, { Component } from 'react';\nimport UserLoggedTabs from '../layout/tabs/UserLoggedTabs';\nimport { Link } from \"react-router-dom\";\nimport MapContainer from \"./GoogleMapa/MapContainer\";\nimport \"./neregistrovan.css\";\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nvar HotelIzlistavanje =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HotelIzlistavanje, _Component);\n\n  function HotelIzlistavanje() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HotelIzlistavanje);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HotelIzlistavanje)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSobeClick = function (hotelId) {\n      _this.props.history.push('/sobe/' + hotelId + '/' + _this.props.match.params.datumOd + '/' + _this.props.match.params.datumDo);\n    };\n\n    _this.handleCenovnikClick = function (hotelId) {\n      _this.props.history.push('/cenovnici/' + hotelId);\n    };\n\n    _this.handleUslugeClick = function (hotelId) {\n      _this.props.history.push('/usluge/' + hotelId);\n    };\n\n    return _this;\n  }\n\n  _createClass(HotelIzlistavanje, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hoteli = this.state.hoteli;\n      var suma = 0;\n      var count = 0;\n      var hoteliList = hoteli.length ? hoteli.map(function (hotel) {\n        suma = 0;\n        count = 0;\n\n        _this2.state.ocene.map(function (ocena) {\n          if (ocena.hotelId == hotel.id) {\n            suma += ocena.rating;\n            count++;\n          }\n        });\n\n        var prosecnaOcena = suma / count;\n        return React.createElement(\"div\", {\n          className: \"post card grey lighten-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-content container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"card-title center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, hotel.name), React.createElement(\"div\", {\n          className: \"left-align\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, \"Adresa: \", hotel.adress), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Opis: \", hotel.promotionalDescription), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Procecna ocena: \", prosecnaOcena, \"/5\"), React.createElement(\"button\", {\n          className: \"buttons btn-small waves-effect waves-light indigo right\",\n          onClick: function onClick() {\n            return _this2.handleUslugeClick(hotel.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Dodatne usluge\"), React.createElement(\"button\", {\n          className: \"buttons btn-small waves-effect waves-light indigo right\",\n          onClick: function onClick() {\n            return _this2.handleCenovnikClick(hotel.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"Cenovnik usluga\"), React.createElement(\"button\", {\n          className: \"buttons btn-small waves-effect waves-light indigo right\",\n          onClick: function onClick() {\n            return _this2.handleSobeClick(hotel.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Sobe\"))));\n      }) : React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Nije pronadjen nijedan hotel.\");\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(UserLoggedTabs, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"red-text lighten-1 center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Lista hotela\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"active\",\n        htmlFor: \"naziv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Sortiraj po\"), React.createElement(\"select\", {\n        onChange: this.sortirajNizovePo,\n        className: \"browser-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"naziv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Nazivu\"), React.createElement(\"option\", {\n        value: \"grad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Adresi\")))))))), hoteliList));\n    }\n  }]);\n\n  return HotelIzlistavanje;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    hoteli: state.hoteli //ovo state se odnosi na reducer. Uzimamo hotele iz reducera\n\n  };\n};\n\nexport default connect(mapStateToProps)(HotelIzlistavanje);","map":{"version":3,"sources":["C:\\Users\\Korisnik\\Desktop\\ISA_Project\\ISA-project\\isa-front\\src\\components\\dashboard\\HoteliIzlistavanje.js"],"names":["React","Component","UserLoggedTabs","Link","MapContainer","axios","connect","HotelIzlistavanje","handleSobeClick","hotelId","props","history","push","match","params","datumOd","datumDo","handleCenovnikClick","handleUslugeClick","hoteli","state","suma","count","hoteliList","length","map","hotel","ocene","ocena","id","rating","prosecnaOcena","name","adress","promotionalDescription","sortirajNizovePo","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAO,qBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAGMC,iB;;;;;;;;;;;;;;;;;;UAiEFC,e,GAAkB,UAACC,OAAD,EAAa;AAC3B,YAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,WAAWH,OAAX,GAAqB,GAArB,GAA2B,MAAKC,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,OAAnD,GAA6D,GAA7D,GAAmE,MAAKL,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBE,OAAnH;AACH,K;;UAEDC,mB,GAAsB,UAACR,OAAD,EAAa;AAC/B,YAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,gBAAgBH,OAAxC;AACH,K;;UAEDS,iB,GAAoB,UAACT,OAAD,EAAa;AAC7B,YAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,aAAaH,OAArC;AACH,K;;;;;;;6BAEQ;AAAA;;AAAA,UACGU,MADH,GACc,KAAKC,KADnB,CACGD,MADH;AAEL,UAAIE,IAAI,GAAG,CAAX;AACA,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAMC,UAAU,GAAGJ,MAAM,CAACK,MAAP,GAAiBL,MAAM,CAACM,GAAP,CAAW,UAAAC,KAAK,EAAI;AACpDL,QAAAA,IAAI,GAAG,CAAP;AACAC,QAAAA,KAAK,GAAG,CAAR;;AACA,QAAA,MAAI,CAACF,KAAL,CAAWO,KAAX,CAAiBF,GAAjB,CAAqB,UAAAG,KAAK,EAAI;AAC1B,cAAIA,KAAK,CAACnB,OAAN,IAAiBiB,KAAK,CAACG,EAA3B,EAA+B;AAC3BR,YAAAA,IAAI,IAAIO,KAAK,CAACE,MAAd;AACAR,YAAAA,KAAK;AACR;AACJ,SALD;;AAOA,YAAIS,aAAa,GAAGV,IAAI,GAAGC,KAA3B;AAEA,eACI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAM,UAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCI,KAAK,CAACM,IAA3C,CADJ,EAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAYN,KAAK,CAACO,MAAlB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAUP,KAAK,CAACQ,sBAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAoBH,aAApB,OAHJ,EAII;AAAQ,UAAA,SAAS,EAAC,yDAAlB;AAA4E,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACb,iBAAL,CAAuBQ,KAAK,CAACG,EAA7B,CAAN;AAAA,WAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,EAKI;AAAQ,UAAA,SAAS,EAAC,yDAAlB;AAA4E,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACZ,mBAAL,CAAyBS,KAAK,CAACG,EAA/B,CAAN;AAAA,WAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALJ,EAMI;AAAQ,UAAA,SAAS,EAAC,yDAAlB;AAA4E,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACrB,eAAL,CAAqBkB,KAAK,CAACG,EAA3B,CAAN;AAAA,WAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CAFJ,CADJ,CADJ;AAgBH,OA5BmC,CAAjB,GA4BZ;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCA5BP;AA+BA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,2BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,OAAO,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAQ,QAAA,QAAQ,EAAE,KAAKM,gBAAvB;AAAyC,QAAA,SAAS,EAAC,iBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CAFJ,CADJ,CADJ,CADJ,CADJ,CADJ,CAFJ,EAmBKZ,UAnBL,CAFJ,CADJ;AA0BH;;;;EA1I2BtB,S;;AA6IhC,IAAMmC,eAAe,GAAG,SAAlBA,eAAkB,CAAChB,KAAD,EAAW;AAC/B,SAAM;AACFD,IAAAA,MAAM,EAAEC,KAAK,CAACD,MADZ,CACmB;;AADnB,GAAN;AAGH,CAJD;;AAOA,eAAeb,OAAO,CAAC8B,eAAD,CAAP,CAAyB7B,iBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport UserLoggedTabs from '../layout/tabs/UserLoggedTabs';\r\nimport { Link } from \"react-router-dom\"\r\nimport MapContainer from \"./GoogleMapa/MapContainer\";\r\nimport \"./neregistrovan.css\";\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nclass HotelIzlistavanje extends Component {\r\n\r\n    /*state = {\r\n        hoteli: [],\r\n        ocene: []\r\n    }*/\r\n\r\n   /* componentDidMount() {\r\n        const imeAdresa = this.props.match.params.imeAdresa;\r\n        const datumOd = this.props.match.params.datumOd;\r\n        const datumDo = this.props.match.params.datumDo;\r\n        const brojSoba = this.props.match.params.brojSoba;\r\n        const brojGostiju = this.props.match.params.brojGostiju;\r\n        axios.get('http://localhost:8092/api/hotel/hotel/filter/' + imeAdresa + '/' + datumOd + '/' + datumDo + '/' + brojSoba + '/' + brojGostiju)\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    hoteli: res.data\r\n                })\r\n\r\n                axios.get('http://localhost:8095/api/hotel/hotelRating/all')\r\n                    .then(res => {\r\n                        this.setState({\r\n                            ocene: res.data\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    sortirajNizovePo = (e) => {\r\n\r\n        const sortirajPo = e.target.value\r\n        var noviNiz = []\r\n\r\n        if (sortirajPo === \"grad\" && this.state.hoteli) {\r\n            noviNiz = this.state.hoteli.sort(function (a, b) {\r\n                var cityA = a.adress.toLowerCase(), cityB = b.adress.toLowerCase()\r\n                if (cityA < cityB)\r\n                    return -1\r\n                if (cityA > cityB)\r\n                    return 1\r\n                return 0\r\n            })\r\n            this.setState({\r\n                hoteli: noviNiz\r\n            })\r\n        }\r\n        else if (sortirajPo === \"naziv\" && this.state.hoteli) {\r\n            noviNiz = this.state.hoteli.sort(function (a, b) {\r\n                var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\r\n                if (nameA < nameB)\r\n                    return -1\r\n                if (nameA > nameB)\r\n                    return 1\r\n                return 0\r\n            })\r\n            this.setState({\r\n                hoteli: noviNiz\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }*/\r\n\r\n    handleSobeClick = (hotelId) => {\r\n        this.props.history.push('/sobe/' + hotelId + '/' + this.props.match.params.datumOd + '/' + this.props.match.params.datumDo)\r\n    }\r\n\r\n    handleCenovnikClick = (hotelId) => {\r\n        this.props.history.push('/cenovnici/' + hotelId)\r\n    }\r\n\r\n    handleUslugeClick = (hotelId) => {\r\n        this.props.history.push('/usluge/' + hotelId)\r\n    }\r\n\r\n    render() {\r\n        const { hoteli } = this.state;\r\n        var suma = 0;\r\n        var count = 0;\r\n        const hoteliList = hoteli.length ? (hoteli.map(hotel => {\r\n            suma = 0;\r\n            count = 0;\r\n            this.state.ocene.map(ocena => {\r\n                if (ocena.hotelId == hotel.id) {\r\n                    suma += ocena.rating;\r\n                    count++;\r\n                }\r\n            })\r\n\r\n            var prosecnaOcena = suma / count;\r\n\r\n            return (\r\n                <div className=\"post card grey lighten-2\">\r\n                    <div className=\"card-content container\">\r\n                        <span className=\"card-title center\">{hotel.name}</span>\r\n                        <div className=\"left-align\">\r\n                            <p>Adresa: {hotel.adress}</p>\r\n                            <p>Opis: {hotel.promotionalDescription}</p>\r\n                            <p>Procecna ocena: {prosecnaOcena}/5</p>\r\n                            <button className=\"buttons btn-small waves-effect waves-light indigo right\" onClick={() => this.handleUslugeClick(hotel.id)}>Dodatne usluge</button>\r\n                            <button className=\"buttons btn-small waves-effect waves-light indigo right\" onClick={() => this.handleCenovnikClick(hotel.id)}>Cenovnik usluga</button>\r\n                            <button className=\"buttons btn-small waves-effect waves-light indigo right\" onClick={() => this.handleSobeClick(hotel.id)}>Sobe</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        })) : (<div className=\"center\">Nije pronadjen nijedan hotel.</div>)\r\n\r\n\r\n        return (\r\n            <div>\r\n                <UserLoggedTabs></UserLoggedTabs>\r\n                <div className=\"container center\">\r\n                    <h2 className=\"red-text lighten-1 center\">Lista hotela</h2>\r\n                    <div>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-content\">\r\n                                <div className=\"container\">\r\n                                    <form className=\"white\">\r\n                                        <div className=\"input-field\">\r\n                                            <label className=\"active\" htmlFor=\"naziv\">Sortiraj po</label>\r\n                                            <select onChange={this.sortirajNizovePo} className=\"browser-default\">\r\n                                                <option value='naziv'>Nazivu</option>\r\n                                                <option value='grad'>Adresi</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {hoteliList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        hoteli: state.hoteli //ovo state se odnosi na reducer. Uzimamo hotele iz reducera\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(HotelIzlistavanje);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}