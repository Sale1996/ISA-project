{"ast":null,"code":"import axios from 'axios';\nexport var getAllCarTypes = function getAllCarTypes() {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/carType/all').then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_CAR_TYPES',\n        carTypes: res.data\n      });\n    });\n  };\n};\nexport var getOneRentService = function getOneRentService(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/rentACarService/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ONE_RENT_SERVICE',\n        rentService: res.data\n      });\n    });\n  };\n};\nexport var getAllBranchOfficesByRentId = function getAllBranchOfficesByRentId(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/branchOffice/getAllByRentService/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_BRANCHES_BY_RENT_SERVICE',\n        branchOffices: res.data\n      });\n    });\n  };\n};\nexport var getAllCarsByRentId = function getAllCarsByRentId(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/car/getByRentService/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_CARS_BY_RENT_SERVICE',\n        cars: res.data\n      });\n    });\n  };\n};\nexport var getAllCarDiscountsByRentId = function getAllCarDiscountsByRentId(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/carDiscounts/rentService/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_CAR_DISCOUNTS_BY_RENT_SERVICE',\n        carDiscounts: res.data\n      });\n    });\n  };\n};\nexport var getAllRentACarServices = function getAllRentACarServices() {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/rentACarService/all').then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_RENT_A_CAR_SERVICES',\n        rentServices: res.data\n      });\n    });\n  };\n};\nexport var createRentACarService = function createRentACarService(rentService) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8090/api/rentacar/rentACarService/', {\n        id: rentService.id,\n        name: rentService.name,\n        adress: rentService.adress,\n        description: rentService.description\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'CREATE_RENT_A_CAR_SERVICE',\n          rentService: res.data\n        });\n      });\n    }\n  };\n};\nexport var editRentACarService = function editRentACarService(id, editedService) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.put('http://localhost:8090/api/rentacar/rentACarService/' + id, {\n        id: editedService.id,\n        name: editedService.name,\n        adress: editedService.adress,\n        description: editedService.description\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'EDIT_RENT_A_CAR_SERVICE',\n          editedService: res.data\n        });\n      });\n    }\n  };\n};\nexport var deleteRentACarService = function deleteRentACarService(id) {\n  return function (dispatch, getState) {\n    console.log(\"OVO JE ID\" + id);\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.delete('http://localhost:8090/api/rentacar/rentACarService/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'DELETE_RENT_A_CAR_SERVICE',\n          deletedService: res.data\n        });\n      });\n    }\n  };\n};\nexport var createCarType = function createCarType(carType) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8090/api/rentacar/carType/', {\n        id: carType.id,\n        numberOfSeats: carType.numberOfSeats,\n        modelYear: carType.modelYear,\n        model: carType.model,\n        brand: carType.brand,\n        carType: carType.carType\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'CREATE_CAR_TYPE',\n          createdCarType: res.data\n        });\n      });\n    }\n  };\n};\nexport var editCarType = function editCarType(id, carType) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.put('http://localhost:8090/api/rentacar/carType/' + id, {\n        id: carType.id,\n        numberOfSeats: carType.numberOfSeats,\n        modelYear: carType.modelYear,\n        model: carType.model,\n        brand: carType.brand,\n        carType: carType.carType\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'EDIT_CAR_TYPE',\n          editedCarType: res.data\n        });\n      });\n    }\n  };\n};\nexport var deleteCarType = function deleteCarType(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.delete('http://localhost:8090/api/rentacar/carType/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'DELETE_CAR_TYPE',\n          deletedCarType: res.data\n        });\n      });\n    }\n  };\n};\nexport var createBranchOffice = function createBranchOffice(branchOffice) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8090/api/rentacar/branchOffice/', {\n        id: branchOffice.id,\n        name: branchOffice.name,\n        adress: branchOffice.adress,\n        city: branchOffice.city,\n        rentServiceDTO: {\n          id: branchOffice.rentServiceDTO.id,\n          name: branchOffice.rentServiceDTO.name,\n          adress: branchOffice.rentServiceDTO.adress,\n          city: branchOffice.rentServiceDTO.city\n        }\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'CREATE_BRANCH_OFFICE',\n          createtBranchOffice: res.data\n        });\n      });\n    }\n  };\n};\nexport var editBranchOffice = function editBranchOffice(id, branchOffice) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.put('http://localhost:8090/api/rentacar/branchOffice/' + id, {\n        id: branchOffice.id,\n        name: branchOffice.name,\n        adress: branchOffice.adress,\n        city: branchOffice.city,\n        rentServiceDTO: {\n          id: branchOffice.rentServiceDTO.id,\n          name: branchOffice.rentServiceDTO.name,\n          adress: branchOffice.rentServiceDTO.adress,\n          city: branchOffice.rentServiceDTO.city\n        }\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'UPDATE_BRANCH_OFFICE',\n          editedBranchOffice: res.data\n        });\n      });\n    }\n  };\n};\nexport var deleteBranchOffice = function deleteBranchOffice(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.delete('http://localhost:8090/api/rentacar/branchOffice/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'DELETE_BRANCH_OFFICE',\n          deleteBranchOffice: res.data\n        });\n      });\n    }\n  };\n};\nexport var createCar = function createCar(car) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8090/api/rentacar/car/', {\n        id: car.id,\n        rentPrice: car.rentPrice,\n        carType: {\n          id: car.carType.id,\n          numberOfSeats: '',\n          modelYear: '',\n          model: '',\n          brand: '',\n          carType: ''\n        },\n        rentService: {\n          id: car.rentService.id,\n          name: '',\n          adress: '',\n          description: ''\n        },\n        branchOffice: {\n          id: car.branchOffice.id,\n          name: '',\n          adress: '',\n          city: '',\n          rentServiceDTO: {\n            id: car.rentService.id,\n            adress: '',\n            name: '',\n            description: ''\n          }\n        }\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'CREATE_CAR',\n          createdCar: res.data\n        });\n      });\n    }\n  };\n};\nexport var editCar = function editCar(id, car) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.put('http://localhost:8090/api/rentacar/car/' + id, {\n        id: car.id,\n        rentPrice: car.rentPrice,\n        carType: {\n          id: car.carType.id,\n          numberOfSeats: '',\n          modelYear: '',\n          model: '',\n          brand: '',\n          carType: ''\n        },\n        rentService: {\n          id: car.rentService.id,\n          name: '',\n          adress: '',\n          description: ''\n        },\n        branchOffice: {\n          id: car.branchOffice.id,\n          name: '',\n          adress: '',\n          city: '',\n          rentServiceDTO: {\n            id: car.rentService.id,\n            adress: '',\n            name: '',\n            description: ''\n          }\n        }\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'UPDATE_CAR',\n          editedCar: res.data\n        });\n      });\n    }\n  };\n};\nexport var deleteCar = function deleteCar(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.delete('http://localhost:8090/api/rentacar/car/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'DELETE_CAR',\n          deletedCar: res.data\n        });\n      });\n    }\n  };\n};\nexport var createCarDiscount = function createCarDiscount(carDiscount) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.post('http://localhost:8090/api/rentacar/carDiscounts/', {\n        id: carDiscount.id,\n        dateFrom: carDiscount.dateFrom,\n        dateTo: carDiscount.dateTo,\n        carDiscountPrecentage: carDiscount.carDiscountPrecentage,\n        carId: {\n          id: carDiscount.carId.id,\n          rentPrice: '',\n          carType: {\n            id: carDiscount.carId.carType.id,\n            numberOfSeats: '',\n            modelYear: '',\n            model: '',\n            brand: '',\n            carType: ''\n          },\n          rentService: {\n            id: carDiscount.carId.rentService.id,\n            name: '',\n            adress: '',\n            description: ''\n          },\n          branchOffice: {\n            id: carDiscount.carId.branchOffice.id,\n            name: '',\n            adress: '',\n            city: '',\n            rentServiceDTO: {\n              id: carDiscount.carId.rentService.id,\n              adress: '',\n              name: '',\n              description: ''\n            }\n          }\n        }\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'CREATE_CAR_DISCOUNT',\n          createdCarDiscount: res.data\n        });\n      });\n    }\n  };\n};\nexport var editCarDiscount = function editCarDiscount(id, carDiscount) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.put('http://localhost:8090/api/rentacar/carDiscounts/' + id, {\n        id: carDiscount.id,\n        dateFrom: carDiscount.dateFrom,\n        dateTo: carDiscount.dateTo,\n        carDiscountPrecentage: carDiscount.carDiscountPrecentage,\n        carId: {\n          id: carDiscount.carId.id,\n          rentPrice: '',\n          carType: {\n            id: carDiscount.carId.carType.id,\n            numberOfSeats: '',\n            modelYear: '',\n            model: '',\n            brand: '',\n            carType: ''\n          },\n          rentService: {\n            id: carDiscount.carId.rentService.id,\n            name: '',\n            adress: '',\n            description: ''\n          },\n          branchOffice: {\n            id: carDiscount.carId.branchOffice.id,\n            name: '',\n            adress: '',\n            city: '',\n            rentServiceDTO: {\n              id: carDiscount.carId.rentService.id,\n              adress: '',\n              name: '',\n              description: ''\n            }\n          }\n        }\n      }, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'UPDATE_CAR_DISCOUNT',\n          editedCarDiscount: res.data\n        });\n      });\n    }\n  };\n};\nexport var deleteCarDiscount = function deleteCarDiscount(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.delete('http://localhost:8090/api/rentacar/carDiscounts/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'DELETE_CAR_DISCOUNT',\n          deletedCarDiscount: res.data\n        });\n      });\n    }\n  };\n};\nexport var getSumOfIncomes = function getSumOfIncomes(rentId, dateFrom, dateTo) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8090/api/rentacar/rentACarService/getSumOfIncomes/' + rentId + '/' + dateFrom + '/' + dateTo, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res);\n        dispatch({\n          type: 'GET_SUM_OF_INCOMES',\n          sumOfIncome: res.data\n        });\n      });\n    }\n  };\n};\nexport var getNumberOfFreeCars = function getNumberOfFreeCars(rentId, dateFrom, dateTo) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8090/api/rentacar/car/getFreeCars/' + dateFrom + '/' + dateTo, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        var freeCarsByRentService = res.data.filter(function (item) {\n          return item.rentService.id == rentId;\n        });\n        var freeCars = 0;\n\n        if (freeCarsByRentService) {\n          freeCars = freeCarsByRentService.length;\n        }\n\n        dispatch({\n          type: 'GET_NUMBER_OF_FREE_CARS_ON_PERIOD',\n          freeCars: freeCars\n        });\n      });\n    }\n  };\n};\nexport var getNumberOfTakenCars = function getNumberOfTakenCars(rentId, dateFrom, dateTo) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8090/api/rentacar/car/getReservedCars/' + dateFrom + '/' + dateTo, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        var takenCarsByRentService = res.data.filter(function (item) {\n          return item.rentService.id == rentId;\n        });\n        var takenCars = 0;\n\n        if (takenCarsByRentService) {\n          takenCars = takenCarsByRentService.length;\n        }\n\n        dispatch({\n          type: 'GET_NUMBER_OF_TAKEN_CARS_ON_PERIOD',\n          takenCars: takenCars\n        });\n      });\n    }\n  };\n};\nexport var getCarsOnDiscount = function getCarsOnDiscount(dateFrom, dateTo) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8090/api/rentacar/car/currentlyDiscount/' + dateFrom + '/' + dateTo, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        dispatch({\n          type: 'GET_ALL_CARS_ON_DISCOUNT',\n          carsOnDiscount: res.data\n        });\n      });\n    }\n  };\n};\nexport var getRentACarServiceId = function getRentACarServiceId(userId) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8095/api/purchases/adminLink/user/' + userId).then(function (res) {\n      dispatch(getOneRentService(res.data.serviceId));\n      dispatch(getAllBranchOfficesByRentId(res.data.serviceId));\n      dispatch(getAllCarDiscountsByRentId(res.data.serviceId));\n      dispatch(getAllCarsByRentId(res.data.serviceId));\n      dispatch({\n        type: 'GET_RENT_SERVICE_ID_BY_RENT_ADMIN_ID',\n        rentACarServiceId: res.data.serviceId\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Korisnik\\Desktop\\ISA_Project\\ISA-project\\isa-front\\src\\store\\actions\\RentACarActions.js"],"names":["axios","getAllCarTypes","dispatch","getState","get","then","res","console","log","data","type","carTypes","getOneRentService","id","rentService","getAllBranchOfficesByRentId","branchOffices","getAllCarsByRentId","cars","getAllCarDiscountsByRentId","carDiscounts","getAllRentACarServices","rentServices","createRentACarService","user","JSON","parse","localStorage","getItem","post","name","adress","description","headers","Role","role","editRentACarService","editedService","put","deleteRentACarService","delete","deletedService","createCarType","carType","numberOfSeats","modelYear","model","brand","createdCarType","editCarType","editedCarType","deleteCarType","deletedCarType","createBranchOffice","branchOffice","city","rentServiceDTO","createtBranchOffice","editBranchOffice","editedBranchOffice","deleteBranchOffice","createCar","car","rentPrice","createdCar","editCar","editedCar","deleteCar","deletedCar","createCarDiscount","carDiscount","dateFrom","dateTo","carDiscountPrecentage","carId","createdCarDiscount","editCarDiscount","editedCarDiscount","deleteCarDiscount","deletedCarDiscount","getSumOfIncomes","rentId","sumOfIncome","getNumberOfFreeCars","freeCarsByRentService","filter","item","freeCars","length","getNumberOfTakenCars","takenCarsByRentService","takenCars","getCarsOnDiscount","carsOnDiscount","getRentACarServiceId","userId","serviceId","rentACarServiceId"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nexport const getAllCarTypes = () => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/carType/all')\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_CAR_TYPES', carTypes: res.data })\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getOneRentService = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/rentACarService/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ONE_RENT_SERVICE', rentService: res.data })\r\n            })\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getAllBranchOfficesByRentId = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/branchOffice/getAllByRentService/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_BRANCHES_BY_RENT_SERVICE', branchOffices: res.data })\r\n            })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const getAllCarsByRentId = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/car/getByRentService/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_CARS_BY_RENT_SERVICE', cars: res.data })\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getAllCarDiscountsByRentId = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/carDiscounts/rentService/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_CAR_DISCOUNTS_BY_RENT_SERVICE', carDiscounts: res.data })\r\n            })\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getAllRentACarServices = () => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/rentACarService/all')\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_RENT_A_CAR_SERVICES', rentServices: res.data })\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const createRentACarService = (rentService) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8090/api/rentacar/rentACarService/', { id: rentService.id, name: rentService.name, adress: rentService.adress, description: rentService.description }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'CREATE_RENT_A_CAR_SERVICE', rentService: res.data });\r\n                })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport const editRentACarService = (id, editedService) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.put('http://localhost:8090/api/rentacar/rentACarService/' + id, { id: editedService.id, name: editedService.name, adress: editedService.adress, description: editedService.description }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'EDIT_RENT_A_CAR_SERVICE', editedService: res.data });\r\n                })\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const deleteRentACarService = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        console.log(\"OVO JE ID\" + id)\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.delete('http://localhost:8090/api/rentacar/rentACarService/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'DELETE_RENT_A_CAR_SERVICE', deletedService: res.data });\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const createCarType = (carType) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8090/api/rentacar/carType/', { id: carType.id, numberOfSeats: carType.numberOfSeats, modelYear: carType.modelYear, model: carType.model, brand: carType.brand, carType: carType.carType }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'CREATE_CAR_TYPE', createdCarType: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const editCarType = (id, carType) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.put('http://localhost:8090/api/rentacar/carType/' + id, { id: carType.id, numberOfSeats: carType.numberOfSeats, modelYear: carType.modelYear, model: carType.model, brand: carType.brand, carType: carType.carType }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'EDIT_CAR_TYPE', editedCarType: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCarType = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.delete('http://localhost:8090/api/rentacar/carType/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'DELETE_CAR_TYPE', deletedCarType: res.data });\r\n                })\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const createBranchOffice = (branchOffice) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8090/api/rentacar/branchOffice/', { id: branchOffice.id, name: branchOffice.name, adress: branchOffice.adress, city: branchOffice.city, rentServiceDTO: { id: branchOffice.rentServiceDTO.id, name: branchOffice.rentServiceDTO.name, adress: branchOffice.rentServiceDTO.adress, city: branchOffice.rentServiceDTO.city } }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'CREATE_BRANCH_OFFICE', createtBranchOffice: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editBranchOffice = (id, branchOffice) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.put('http://localhost:8090/api/rentacar/branchOffice/' + id, { id: branchOffice.id, name: branchOffice.name, adress: branchOffice.adress, city: branchOffice.city, rentServiceDTO: { id: branchOffice.rentServiceDTO.id, name: branchOffice.rentServiceDTO.name, adress: branchOffice.rentServiceDTO.adress, city: branchOffice.rentServiceDTO.city } }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'UPDATE_BRANCH_OFFICE', editedBranchOffice: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deleteBranchOffice = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.delete('http://localhost:8090/api/rentacar/branchOffice/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'DELETE_BRANCH_OFFICE', deleteBranchOffice: res.data });\r\n                })\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const createCar = (car) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8090/api/rentacar/car/', { id: car.id, rentPrice: car.rentPrice, carType: { id: car.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: car.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } } }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'CREATE_CAR', createdCar: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editCar = (id, car) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.put('http://localhost:8090/api/rentacar/car/' + id, { id: car.id, rentPrice: car.rentPrice, carType: { id: car.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: car.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } } }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'UPDATE_CAR', editedCar: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCar = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.delete('http://localhost:8090/api/rentacar/car/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'DELETE_CAR', deletedCar: res.data });\r\n                })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const createCarDiscount = (carDiscount) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.post('http://localhost:8090/api/rentacar/carDiscounts/', { id: carDiscount.id, dateFrom: carDiscount.dateFrom, dateTo: carDiscount.dateTo, carDiscountPrecentage: carDiscount.carDiscountPrecentage, carId: { id: carDiscount.carId.id, rentPrice: '', carType: { id: carDiscount.carId.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: carDiscount.carId.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: carDiscount.carId.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: carDiscount.carId.rentService.id, adress: '', name: '', description: '' } } } }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'CREATE_CAR_DISCOUNT', createdCarDiscount: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editCarDiscount = (id, carDiscount) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.put('http://localhost:8090/api/rentacar/carDiscounts/' + id, { id: carDiscount.id, dateFrom: carDiscount.dateFrom, dateTo: carDiscount.dateTo, carDiscountPrecentage: carDiscount.carDiscountPrecentage, carId: { id: carDiscount.carId.id, rentPrice: '', carType: { id: carDiscount.carId.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: carDiscount.carId.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: carDiscount.carId.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: carDiscount.carId.rentService.id, adress: '', name: '', description: '' } } } }, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'UPDATE_CAR_DISCOUNT', editedCarDiscount: res.data });\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCarDiscount = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.delete('http://localhost:8090/api/rentacar/carDiscounts/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res);\r\n                    dispatch({ type: 'DELETE_CAR_DISCOUNT', deletedCarDiscount: res.data });\r\n                })\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const getSumOfIncomes = (rentId, dateFrom, dateTo) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8090/api/rentacar/rentACarService/getSumOfIncomes/' + rentId + '/' + dateFrom + '/' + dateTo, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    dispatch({ type: 'GET_SUM_OF_INCOMES', sumOfIncome: res.data })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getNumberOfFreeCars = (rentId, dateFrom, dateTo) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8090/api/rentacar/car/getFreeCars/' + dateFrom + '/' + dateTo, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n\r\n                    var freeCarsByRentService = res.data.filter(item => item.rentService.id == rentId)\r\n                    var freeCars = 0\r\n                    if (freeCarsByRentService) {\r\n                        freeCars = freeCarsByRentService.length\r\n                    }\r\n                    dispatch({ type: 'GET_NUMBER_OF_FREE_CARS_ON_PERIOD', freeCars: freeCars })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getNumberOfTakenCars = (rentId, dateFrom, dateTo) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8090/api/rentacar/car/getReservedCars/' + dateFrom + '/' + dateTo, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    var takenCarsByRentService = res.data.filter(item => item.rentService.id == rentId)\r\n                    var takenCars = 0\r\n                    if (takenCarsByRentService) {\r\n                        takenCars = takenCarsByRentService.length\r\n                    }\r\n                    dispatch({ type: 'GET_NUMBER_OF_TAKEN_CARS_ON_PERIOD', takenCars: takenCars })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const getCarsOnDiscount = (dateFrom, dateTo) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8090/api/rentacar/car/currentlyDiscount/' + dateFrom + '/' + dateTo, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    dispatch({ type: 'GET_ALL_CARS_ON_DISCOUNT', carsOnDiscount: res.data })\r\n                })\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getRentACarServiceId = (userId) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8095/api/purchases/adminLink/user/' + userId)\r\n            .then(res => {\r\n                dispatch(getOneRentService(res.data.serviceId));\r\n                dispatch(getAllBranchOfficesByRentId(res.data.serviceId));\r\n                dispatch(getAllCarDiscountsByRentId(res.data.serviceId));\r\n                dispatch(getAllCarsByRentId(res.data.serviceId));\r\n\r\n                dispatch({ type: 'GET_RENT_SERVICE_ID_BY_RENT_ADMIN_ID', rentACarServiceId: res.data.serviceId })\r\n            })\r\n\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}