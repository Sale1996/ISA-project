{"ast":null,"code":"import axios from 'axios';\nexport var getAllCarTypes = function getAllCarTypes() {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/carType/all').then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_CAR_TYPES',\n        carTypes: res.data\n      });\n    });\n  };\n};\nexport var getOneRentService = function getOneRentService(id) {\n  return function (dispatch, getState) {\n    var user = JSON.parse(localStorage.getItem('user'));\n\n    if (user) {\n      axios.get('http://localhost:8090/api/rentacar/rentACarService/' + id, {\n        headers: {\n          Role: user.role.role\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        dispatch({\n          type: 'GET_ONE_RENT_SERVICE',\n          rentService: res.data\n        });\n      });\n    }\n  };\n};\nexport var getAllBranchOfficesByRentId = function getAllBranchOfficesByRentId(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/branchOffice/getAllByRentService/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_BRANCHES_BY_RENT_SERVICE',\n        branchOffices: res.data\n      });\n    });\n  };\n};\nexport var getAllCarsByRentId = function getAllCarsByRentId(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/car/getByRentService/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_CARS_BY_RENT_SERVICE',\n        cars: res.data\n      });\n    });\n  };\n};\nexport var getAllCarDiscountsByRentId = function getAllCarDiscountsByRentId(id) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/carDiscounts/rentService/' + id).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_CAR_DISCOUNTS_BY_RENT_SERVICE',\n        carDiscounts: res.data\n      });\n    });\n  };\n};\nexport var getAllRentACarServices = function getAllRentACarServices() {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/rentACarService/all').then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: 'GET_ALL_RENT_A_CAR_SERVICES',\n        rentServices: res.data\n      });\n    });\n  };\n};\nexport var createRentACarService = function createRentACarService(rentService) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8090/api/rentacar/rentACarService/', {\n      id: rentService.id,\n      name: rentService.name,\n      adress: rentService.adress,\n      description: rentService.description\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'CREATE_RENT_A_CAR_SERVICE',\n        rentService: res.data\n      });\n    });\n  };\n};\nexport var editRentACarService = function editRentACarService(id, editedService) {\n  return function (dispatch, getState) {\n    axios.put('http://localhost:8090/api/rentacar/rentACarService/' + id, {\n      id: editedService.id,\n      name: editedService.name,\n      adress: editedService.adress,\n      description: editedService.description\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'EDIT_RENT_A_CAR_SERVICE',\n        editedService: res.data\n      });\n    });\n  };\n};\nexport var deleteRentACarService = function deleteRentACarService(id) {\n  return function (dispatch, getState) {\n    console.log(\"OVO JE ID\" + id);\n    axios.delete('http://localhost:8090/api/rentacar/rentACarService/' + id).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'DELETE_RENT_A_CAR_SERVICE',\n        deletedService: res.data\n      });\n    });\n  };\n};\nexport var createCarType = function createCarType(carType) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8090/api/rentacar/carType/', {\n      id: carType.id,\n      numberOfSeats: carType.numberOfSeats,\n      modelYear: carType.modelYear,\n      model: carType.model,\n      brand: carType.brand,\n      carType: carType.carType\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'CREATE_CAR_TYPE',\n        createdCarType: res.data\n      });\n    });\n  };\n};\nexport var editCarType = function editCarType(id, carType) {\n  return function (dispatch, getState) {\n    axios.put('http://localhost:8090/api/rentacar/carType/' + id, {\n      id: carType.id,\n      numberOfSeats: carType.numberOfSeats,\n      modelYear: carType.modelYear,\n      model: carType.model,\n      brand: carType.brand,\n      carType: carType.carType\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'EDIT_CAR_TYPE',\n        editedCarType: res.data\n      });\n    });\n  };\n};\nexport var deleteCarType = function deleteCarType(id) {\n  return function (dispatch, getState) {\n    axios.delete('http://localhost:8090/api/rentacar/carType/' + id).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'DELETE_CAR_TYPE',\n        deletedCarType: res.data\n      });\n    });\n  };\n};\nexport var createBranchOffice = function createBranchOffice(branchOffice) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8090/api/rentacar/branchOffice/', {\n      id: branchOffice.id,\n      name: branchOffice.name,\n      adress: branchOffice.adress,\n      city: branchOffice.city,\n      rentServiceDTO: {\n        id: branchOffice.rentServiceDTO.id,\n        name: branchOffice.rentServiceDTO.name,\n        adress: branchOffice.rentServiceDTO.adress,\n        city: branchOffice.rentServiceDTO.city\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'CREATE_BRANCH_OFFICE',\n        createtBranchOffice: res.data\n      });\n    });\n  };\n};\nexport var editBranchOffice = function editBranchOffice(id, branchOffice) {\n  return function (dispatch, getState) {\n    axios.put('http://localhost:8090/api/rentacar/branchOffice/' + id, {\n      id: branchOffice.id,\n      name: branchOffice.name,\n      adress: branchOffice.adress,\n      city: branchOffice.city,\n      rentServiceDTO: {\n        id: branchOffice.rentServiceDTO.id,\n        name: branchOffice.rentServiceDTO.name,\n        adress: branchOffice.rentServiceDTO.adress,\n        city: branchOffice.rentServiceDTO.city\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'UPDATE_BRANCH_OFFICE',\n        editedBranchOffice: res.data\n      });\n    });\n  };\n};\nexport var deleteBranchOffice = function deleteBranchOffice(id) {\n  return function (dispatch, getState) {\n    axios.delete('http://localhost:8090/api/rentacar/branchOffice/' + id).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'DELETE_BRANCH_OFFICE',\n        deleteBranchOffice: res.data\n      });\n    });\n  };\n};\nexport var createCar = function createCar(car) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8090/api/rentacar/car/', {\n      id: car.id,\n      rentPrice: car.rentPrice,\n      carType: {\n        id: car.carType.id,\n        numberOfSeats: '',\n        modelYear: '',\n        model: '',\n        brand: '',\n        carType: ''\n      },\n      rentService: {\n        id: car.rentService.id,\n        name: '',\n        adress: '',\n        description: ''\n      },\n      branchOffice: {\n        id: car.branchOffice.id,\n        name: '',\n        adress: '',\n        city: '',\n        rentServiceDTO: {\n          id: car.rentService.id,\n          adress: '',\n          name: '',\n          description: ''\n        }\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'CREATE_CAR',\n        createdCar: res.data\n      });\n    });\n  };\n};\nexport var editCar = function editCar(id, car) {\n  return function (dispatch, getState) {\n    axios.put('http://localhost:8090/api/rentacar/car/' + id, {\n      id: car.id,\n      rentPrice: car.rentPrice,\n      carType: {\n        id: car.carType.id,\n        numberOfSeats: '',\n        modelYear: '',\n        model: '',\n        brand: '',\n        carType: ''\n      },\n      rentService: {\n        id: car.rentService.id,\n        name: '',\n        adress: '',\n        description: ''\n      },\n      branchOffice: {\n        id: car.branchOffice.id,\n        name: '',\n        adress: '',\n        city: '',\n        rentServiceDTO: {\n          id: car.rentService.id,\n          adress: '',\n          name: '',\n          description: ''\n        }\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'UPDATE_CAR',\n        editedCar: res.data\n      });\n    });\n  };\n};\nexport var deleteCar = function deleteCar(id) {\n  return function (dispatch, getState) {\n    axios.delete('http://localhost:8090/api/rentacar/car/' + id).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'DELETE_CAR',\n        deletedCar: res.data\n      });\n    });\n  };\n};\nexport var createCarDiscount = function createCarDiscount(carDiscount) {\n  return function (dispatch, getState) {\n    axios.post('http://localhost:8090/api/rentacar/carDiscounts/', {\n      id: carDiscount.id,\n      dateFrom: carDiscount.dateFrom,\n      dateTo: carDiscount.dateTo,\n      carDiscountPrecentage: carDiscount.carDiscountPrecentage,\n      carId: {\n        id: carDiscount.carId.id,\n        rentPrice: '',\n        carType: {\n          id: carDiscount.carId.carType.id,\n          numberOfSeats: '',\n          modelYear: '',\n          model: '',\n          brand: '',\n          carType: ''\n        },\n        rentService: {\n          id: carDiscount.carId.rentService.id,\n          name: '',\n          adress: '',\n          description: ''\n        },\n        branchOffice: {\n          id: carDiscount.carId.branchOffice.id,\n          name: '',\n          adress: '',\n          city: '',\n          rentServiceDTO: {\n            id: carDiscount.carId.rentService.id,\n            adress: '',\n            name: '',\n            description: ''\n          }\n        }\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'CREATE_CAR_DISCOUNT',\n        createdCarDiscount: res.data\n      });\n    });\n  };\n};\nexport var editCarDiscount = function editCarDiscount(id, carDiscount) {\n  return function (dispatch, getState) {\n    axios.put('http://localhost:8090/api/rentacar/carDiscounts/' + id, {\n      id: carDiscount.id,\n      dateFrom: carDiscount.dateFrom,\n      dateTo: carDiscount.dateTo,\n      carDiscountPrecentage: carDiscount.carDiscountPrecentage,\n      carId: {\n        id: carDiscount.carId.id,\n        rentPrice: '',\n        carType: {\n          id: carDiscount.carId.carType.id,\n          numberOfSeats: '',\n          modelYear: '',\n          model: '',\n          brand: '',\n          carType: ''\n        },\n        rentService: {\n          id: carDiscount.carId.rentService.id,\n          name: '',\n          adress: '',\n          description: ''\n        },\n        branchOffice: {\n          id: carDiscount.carId.branchOffice.id,\n          name: '',\n          adress: '',\n          city: '',\n          rentServiceDTO: {\n            id: carDiscount.carId.rentService.id,\n            adress: '',\n            name: '',\n            description: ''\n          }\n        }\n      }\n    }).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'UPDATE_CAR_DISCOUNT',\n        editedCarDiscount: res.data\n      });\n    });\n  };\n};\nexport var deleteCarDiscount = function deleteCarDiscount(id) {\n  return function (dispatch, getState) {\n    axios.delete('http://localhost:8090/api/rentacar/carDiscounts/' + id).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'DELETE_CAR_DISCOUNT',\n        deletedCarDiscount: res.data\n      });\n    });\n  };\n};\nexport var getSumOfIncomes = function getSumOfIncomes(rentId, dateFrom, dateTo) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/rentACarService/getSumOfIncomes/' + rentId + '/' + dateFrom + '/' + dateTo).then(function (res) {\n      console.log(res);\n      dispatch({\n        type: 'GET_SUM_OF_INCOMES',\n        sumOfIncome: res.data\n      });\n    });\n  };\n};\nexport var getNumberOfFreeCars = function getNumberOfFreeCars(rentId, dateFrom, dateTo) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/car/getFreeCars/' + dateFrom + '/' + dateTo).then(function (res) {\n      var freeCarsByRentService = res.data.filter(function (item) {\n        return item.rentService.id == rentId;\n      });\n      var freeCars = 0;\n\n      if (freeCarsByRentService) {\n        freeCars = freeCarsByRentService.length;\n      }\n\n      dispatch({\n        type: 'GET_NUMBER_OF_FREE_CARS_ON_PERIOD',\n        freeCars: freeCars\n      });\n    });\n  };\n};\nexport var getNumberOfTakenCars = function getNumberOfTakenCars(rentId, dateFrom, dateTo) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/car/getReservedCars/' + dateFrom + '/' + dateTo).then(function (res) {\n      var takenCarsByRentService = res.data.filter(function (item) {\n        return item.rentService.id == rentId;\n      });\n      var takenCars = 0;\n\n      if (takenCarsByRentService) {\n        takenCars = takenCarsByRentService.length;\n      }\n\n      dispatch({\n        type: 'GET_NUMBER_OF_TAKEN_CARS_ON_PERIOD',\n        takenCars: takenCars\n      });\n    });\n  };\n};\nexport var getCarsOnDiscount = function getCarsOnDiscount(dateFrom, dateTo) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8090/api/rentacar/car/currentlyDiscount/' + dateFrom + '/' + dateTo).then(function (res) {\n      dispatch({\n        type: 'GET_ALL_CARS_ON_DISCOUNT',\n        carsOnDiscount: res.data\n      });\n    });\n  };\n};\nexport var getRentACarServiceId = function getRentACarServiceId(userId) {\n  return function (dispatch, getState) {\n    axios.get('http://localhost:8095/api/purchases/adminLink/user/' + userId).then(function (res) {\n      dispatch(getOneRentService(res.data.serviceId));\n      dispatch(getAllBranchOfficesByRentId(res.data.serviceId));\n      dispatch(getAllCarDiscountsByRentId(res.data.serviceId));\n      dispatch(getAllCarsByRentId(res.data.serviceId));\n      dispatch({\n        type: 'GET_RENT_SERVICE_ID_BY_RENT_ADMIN_ID',\n        rentACarServiceId: res.data.serviceId\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\ISA_PROJEKAT_BACKUP\\ISA-project\\isa-front\\src\\store\\actions\\RentACarActions.js"],"names":["axios","getAllCarTypes","dispatch","getState","get","then","res","console","log","data","type","carTypes","getOneRentService","id","user","JSON","parse","localStorage","getItem","headers","Role","role","rentService","getAllBranchOfficesByRentId","branchOffices","getAllCarsByRentId","cars","getAllCarDiscountsByRentId","carDiscounts","getAllRentACarServices","rentServices","createRentACarService","post","name","adress","description","editRentACarService","editedService","put","deleteRentACarService","delete","deletedService","createCarType","carType","numberOfSeats","modelYear","model","brand","createdCarType","editCarType","editedCarType","deleteCarType","deletedCarType","createBranchOffice","branchOffice","city","rentServiceDTO","createtBranchOffice","editBranchOffice","editedBranchOffice","deleteBranchOffice","createCar","car","rentPrice","createdCar","editCar","editedCar","deleteCar","deletedCar","createCarDiscount","carDiscount","dateFrom","dateTo","carDiscountPrecentage","carId","createdCarDiscount","editCarDiscount","editedCarDiscount","deleteCarDiscount","deletedCarDiscount","getSumOfIncomes","rentId","sumOfIncome","getNumberOfFreeCars","freeCarsByRentService","filter","item","freeCars","length","getNumberOfTakenCars","takenCarsByRentService","takenCars","getCarsOnDiscount","carsOnDiscount","getRentACarServiceId","userId","serviceId","rentACarServiceId"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nexport const getAllCarTypes = () => {\r\n\r\n    return (dispatch, getState) => {\r\n        axios.get('http://localhost:8090/api/rentacar/carType/all')\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_CAR_TYPES', carTypes: res.data })\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getOneRentService = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        var user = JSON.parse(localStorage.getItem('user'))\r\n        if (user) {\r\n            axios.get('http://localhost:8090/api/rentacar/rentACarService/' + id, {\r\n                headers: {\r\n                    Role: user.role.role\r\n                }\r\n            })\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    dispatch({ type: 'GET_ONE_RENT_SERVICE', rentService: res.data })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getAllBranchOfficesByRentId = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/branchOffice/getAllByRentService/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_BRANCHES_BY_RENT_SERVICE', branchOffices: res.data })\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const getAllCarsByRentId = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/car/getByRentService/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_CARS_BY_RENT_SERVICE', cars: res.data })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const getAllCarDiscountsByRentId = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/carDiscounts/rentService/' + id)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_CAR_DISCOUNTS_BY_RENT_SERVICE', carDiscounts: res.data })\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getAllRentACarServices = () => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/rentACarService/all')\r\n            .then(res => {\r\n                console.log(res.data);\r\n                dispatch({ type: 'GET_ALL_RENT_A_CAR_SERVICES', rentServices: res.data })\r\n            })\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const createRentACarService = (rentService) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.post('http://localhost:8090/api/rentacar/rentACarService/', { id: rentService.id, name: rentService.name, adress: rentService.adress, description: rentService.description })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'CREATE_RENT_A_CAR_SERVICE', rentService: res.data });\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const editRentACarService = (id, editedService) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.put('http://localhost:8090/api/rentacar/rentACarService/' + id, { id: editedService.id, name: editedService.name, adress: editedService.adress, description: editedService.description })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'EDIT_RENT_A_CAR_SERVICE', editedService: res.data });\r\n            })\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const deleteRentACarService = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n        console.log(\"OVO JE ID\" + id)\r\n        axios.delete('http://localhost:8090/api/rentacar/rentACarService/' + id)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'DELETE_RENT_A_CAR_SERVICE', deletedService: res.data });\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const createCarType = (carType) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.post('http://localhost:8090/api/rentacar/carType/', { id: carType.id, numberOfSeats: carType.numberOfSeats, modelYear: carType.modelYear, model: carType.model, brand: carType.brand, carType: carType.carType })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'CREATE_CAR_TYPE', createdCarType: res.data });\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const editCarType = (id, carType) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.put('http://localhost:8090/api/rentacar/carType/' + id, { id: carType.id, numberOfSeats: carType.numberOfSeats, modelYear: carType.modelYear, model: carType.model, brand: carType.brand, carType: carType.carType })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'EDIT_CAR_TYPE', editedCarType: res.data });\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCarType = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.delete('http://localhost:8090/api/rentacar/carType/' + id)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'DELETE_CAR_TYPE', deletedCarType: res.data });\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const createBranchOffice = (branchOffice) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.post('http://localhost:8090/api/rentacar/branchOffice/', { id: branchOffice.id, name: branchOffice.name, adress: branchOffice.adress, city: branchOffice.city, rentServiceDTO: { id: branchOffice.rentServiceDTO.id, name: branchOffice.rentServiceDTO.name, adress: branchOffice.rentServiceDTO.adress, city: branchOffice.rentServiceDTO.city } })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'CREATE_BRANCH_OFFICE', createtBranchOffice: res.data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const editBranchOffice = (id, branchOffice) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.put('http://localhost:8090/api/rentacar/branchOffice/' + id, { id: branchOffice.id, name: branchOffice.name, adress: branchOffice.adress, city: branchOffice.city, rentServiceDTO: { id: branchOffice.rentServiceDTO.id, name: branchOffice.rentServiceDTO.name, adress: branchOffice.rentServiceDTO.adress, city: branchOffice.rentServiceDTO.city } })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'UPDATE_BRANCH_OFFICE', editedBranchOffice: res.data });\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteBranchOffice = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.delete('http://localhost:8090/api/rentacar/branchOffice/' + id)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'DELETE_BRANCH_OFFICE', deleteBranchOffice: res.data });\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const createCar = (car) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.post('http://localhost:8090/api/rentacar/car/', { id: car.id, rentPrice: car.rentPrice, carType: { id: car.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: car.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } } })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'CREATE_CAR', createdCar: res.data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const editCar = (id, car) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.put('http://localhost:8090/api/rentacar/car/' + id, { id: car.id, rentPrice: car.rentPrice, carType: { id: car.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: car.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: car.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: car.rentService.id, adress: '', name: '', description: '' } } })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'UPDATE_CAR', editedCar: res.data });\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCar = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.delete('http://localhost:8090/api/rentacar/car/' + id)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'DELETE_CAR', deletedCar: res.data });\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const createCarDiscount = (carDiscount) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.post('http://localhost:8090/api/rentacar/carDiscounts/', { id: carDiscount.id, dateFrom: carDiscount.dateFrom, dateTo: carDiscount.dateTo, carDiscountPrecentage: carDiscount.carDiscountPrecentage, carId: { id: carDiscount.carId.id, rentPrice: '', carType: { id: carDiscount.carId.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: carDiscount.carId.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: carDiscount.carId.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: carDiscount.carId.rentService.id, adress: '', name: '', description: '' } } } })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'CREATE_CAR_DISCOUNT', createdCarDiscount: res.data });\r\n            })\r\n    }\r\n}\r\n\r\nexport const editCarDiscount = (id, carDiscount) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.put('http://localhost:8090/api/rentacar/carDiscounts/' + id, { id: carDiscount.id, dateFrom: carDiscount.dateFrom, dateTo: carDiscount.dateTo, carDiscountPrecentage: carDiscount.carDiscountPrecentage, carId: { id: carDiscount.carId.id, rentPrice: '', carType: { id: carDiscount.carId.carType.id, numberOfSeats: '', modelYear: '', model: '', brand: '', carType: '' }, rentService: { id: carDiscount.carId.rentService.id, name: '', adress: '', description: '' }, branchOffice: { id: carDiscount.carId.branchOffice.id, name: '', adress: '', city: '', rentServiceDTO: { id: carDiscount.carId.rentService.id, adress: '', name: '', description: '' } } } })\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'UPDATE_CAR_DISCOUNT', editedCarDiscount: res.data });\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteCarDiscount = (id) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.delete('http://localhost:8090/api/rentacar/carDiscounts/' + id)\r\n            .then(res => {\r\n                console.log(res);\r\n                dispatch({ type: 'DELETE_CAR_DISCOUNT', deletedCarDiscount: res.data });\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const getSumOfIncomes = (rentId, dateFrom, dateTo) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/rentACarService/getSumOfIncomes/' + rentId + '/' + dateFrom + '/' + dateTo)\r\n            .then(res => {\r\n                console.log(res)\r\n                dispatch({ type: 'GET_SUM_OF_INCOMES', sumOfIncome: res.data })\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getNumberOfFreeCars = (rentId, dateFrom, dateTo) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/car/getFreeCars/' + dateFrom + '/' + dateTo)\r\n            .then(res => {\r\n\r\n                var freeCarsByRentService = res.data.filter(item => item.rentService.id == rentId)\r\n                var freeCars = 0\r\n                if (freeCarsByRentService) {\r\n                    freeCars = freeCarsByRentService.length\r\n                }\r\n                dispatch({ type: 'GET_NUMBER_OF_FREE_CARS_ON_PERIOD', freeCars: freeCars })\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const getNumberOfTakenCars = (rentId, dateFrom, dateTo) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/car/getReservedCars/' + dateFrom + '/' + dateTo)\r\n            .then(res => {\r\n                var takenCarsByRentService = res.data.filter(item => item.rentService.id == rentId)\r\n                var takenCars = 0\r\n                if (takenCarsByRentService) {\r\n                    takenCars = takenCarsByRentService.length\r\n                }\r\n                dispatch({ type: 'GET_NUMBER_OF_TAKEN_CARS_ON_PERIOD', takenCars: takenCars })\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const getCarsOnDiscount = (dateFrom, dateTo) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8090/api/rentacar/car/currentlyDiscount/' + dateFrom + '/' + dateTo)\r\n            .then(res => {\r\n                dispatch({ type: 'GET_ALL_CARS_ON_DISCOUNT', carsOnDiscount: res.data })\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const getRentACarServiceId = (userId) => {\r\n\r\n    return (dispatch, getState) => {\r\n\r\n        axios.get('http://localhost:8095/api/purchases/adminLink/user/' + userId)\r\n            .then(res => {\r\n                dispatch(getOneRentService(res.data.serviceId));\r\n                dispatch(getAllBranchOfficesByRentId(res.data.serviceId));\r\n                dispatch(getAllCarDiscountsByRentId(res.data.serviceId));\r\n                dispatch(getAllCarsByRentId(res.data.serviceId));\r\n\r\n                dispatch({ type: 'GET_RENT_SERVICE_ID_BY_RENT_ADMIN_ID', rentACarServiceId: res.data.serviceId })\r\n            })\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}